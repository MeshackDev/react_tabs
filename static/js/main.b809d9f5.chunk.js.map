{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","id","className","map","tab","classNames","type","onClick","handleClick","href","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAmBH,EAAKI,MAAK,YACjC,OAD6C,EAATC,KACtBJ,MACVD,EAAK,GAQX,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKM,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAAAC,GAAG,OACX,oBACEF,UAAWG,IAAW,CAAE,YAAaN,EAAYE,KAAOG,EAAIH,KAC5D,UAAQ,MAFV,SAIE,wBACEK,KAAK,SACLC,QAAS,kBAjBH,SAACH,GACfA,IAAQL,GACVD,EAAcM,GAeWI,CAAYJ,IAF7B,SAIE,mBACEK,KAAI,WAAML,EAAIH,IACd,UAAQ,UAFV,SAIGG,EAAIM,mBAQjB,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAYY,cC3CRf,EAAO,CAClB,CAAEK,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,eACxC,CAAEV,GAAI,QAASS,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAcjB,EAAK,IAAzD,mBAAOG,EAAP,KAAoBe,EAApB,KAMA,OACE,sBAAKZ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBH,EAAYW,SAGlC,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAeE,EAAYE,GAC3BH,cAbiB,SAACM,GACtBU,EAAeV,UCdnBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b809d9f5.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../Types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab: Tab = tabs.find(({ id }) => {\n    return id === selectedTabId;\n  }) || tabs[0];\n\n  const handleClick = (tab: Tab) => {\n    if (tab !== selectedTab) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames({ 'is-active': selectedTab.id === tab.id })}\n              data-cy=\"Tab\"\n            >\n              <button\n                type=\"button\"\n                onClick={() => handleClick(tab)}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                >\n                  {tab.title}\n                </a>\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './Types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState<Tab>(tabs[0]);\n\n  const newSelectedTab = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={newSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}